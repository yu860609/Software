<?xml version="1.0" encoding="utf-8"?>
<launch>
	<arg name="veh" doc="Name of vehicle"/>
	<arg name="pkg_name" default="csp_joy_mapper_demo"/>
	<arg name="local" default="false"/>
	<arg name="joymapper" default="true"/>
	<arg name="fsm" default="false"/>
	<arg name="config" default="baseline" />
	<include unless="$(arg local)" file="$(find duckietown)/machines"/>
	
	<!-- Open joy_node, a node that interfaces a generic Linux joystick to ROS --> 
    <node ns="$(arg veh)" pkg="joy" type="joy_node" name="joy" output="screen">
        <rosparam command="load" file="$(find duckietown)/config/baseline/joy/joy_node/default.yaml"/>
    </node>

    
    <group if="$(arg joymapper)">

    	<!-- Start Joy Mapper -->
		<node ns="$(arg veh)" name="joy_mapper_node" pkg="$(arg pkg_name)" type="joy_mapper_node.py"  output="screen">
		</node>

		<!-- Start inverse_kinematics_node -->
		<remap from="inverse_kinematics_node/car_cmd" to="joy_mapper_node/car_cmd"/>
		<include file="$(find dagu_car)/launch/inverse_kinematics_node.launch">
			<arg name="veh" value="$(arg veh)"/>
		</include>

	    <remap from="wheels_driver_node/wheels_cmd" to="inverse_kinematics_node/wheels_cmd"/>
	    <include file="$(find dagu_car)/launch/wheels_driver_node.launch">
	        <arg name="veh" value="$(arg veh)"/>
	    </include>  

	</group>

	<!-- Start FSM -->
	<group if="$(arg fsm)">
		<!-- FSM -->
		<!-- no remapping for FSM - full topic names specified in params yaml -->
		<include file="$(find fsm)/launch/fsm_node.launch">
			<arg name="veh" value="$(arg veh)"/>        
			<arg name="config" value="$(arg config)"/>        
			<arg name="param_file_name" value="csp_demo_fsm"/>        
		</include>
	</group>
	<!--End FSM -->

</launch>
